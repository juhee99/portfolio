export const inlabMarkdown = `
# InLab
*2023.06.10 ~ 2023.07.23 ( FE: 1명, BE: 3명 )*
* * *
### 📌  SUMMARY
면접관을 위한 기술 면접 플랫폼입니다.
기술면접의 질문을 구성하고, 면접자의 답변을 텍스트화하여 공정한 평가를 돕는 서비스입니다.
### 🧐 BACKGROUND
수시 채용 확대에 따라 면접 준비 시간은 부족해지고, 기업에 적절한 인재를 찾기위해서는
공정하고 형평성 있는 기술 면접이 중요해졌습니다. 이를 고민하시던 멘토님을 위해 면접자가
아닌 면접관을 위한 맞춤형 서비스를 기획하게 되었습니다.

### ⚽ 주요기능
* 직무별 질문을 구성하고, 질문별 체크리스트를 만들 수 있습니다.
* 면접 템플릿을 생성하여 면접 준비를 간소화 합니다.
* 면접자의 답변을 녹음하여 Clova STT로 면접자의 답변을 텍스트화 합니다.
* 텍스트화된 면접자의 답변을 ChatGPT API를 통해 평가를 요청하여 평가를 보조할 수 있습니다.

### 👩‍💻 수행업무
* 면접관리, 유형 관리, 직무 관리 API 개발
* QueryDSL과 BooleanExpression을 활용해 동적 쿼리 기반 권한 처리 로직 구현
* 예외처리 시 COUNT 쿼리에서 EXISTS 쿼리로 변경하여 8SEC -> 4SEC로 성능 개선
* 프로젝트 산출물 작성 및 관리, DFD, 테스트 케이스, WBS 등 다양한 문서 작성

### 🥅 MEANING
KOSA에서 최종 프로젝트였기 때문에 코드의 품질을 향상을 위해 재사용성과 클린 코드를 팀 목표로 설정했습니다.
Request, Response, Exception 처리를 상속 구조로 설계하여 일관성 있는 API 설계를 했고, 
공통된 부분은 제너릭과 상속을 통해 반복되는 코드를 최소화 했습니다. 모듈화에 신경쓰다 보니
개발 속도는 느렸지만 결과적으로 파일 수 를 최소화 할 수 있었고 프론트엔드에게 일관된 API를 제공하여 
화면 개발 속도를 높일 수 있었습니다.

프로젝트 기간동안 멘토링을 받으며 실무에서 사용하는 기술을 적용해 보고, 사용자 관점에서 서비스를 바라보고,
세일 포인트와 타겟팅을 고려하며 기획하는 방법을 배웠습니다. 이를 통해 사용자에게 가치를 전달하고 더욱 완성도 있는
서비스를 설계할 수 있었습니다.

### GITHUB 
🧷  https://github.com/dk-tech-master/inlab 
`;

export const refreshMarkdown = `
# REfresh
*2023.04 ~ 2023.06 ( FullStack 4명 )*
* * *
### 🧐 BACKGROUND
인턴 시절, Word 파일로 연차를 신청하다 보니 인사담당자는 매일 연차를
계산해야 했고, 팀장님은 휴가 중인 팀원들의 일정을 한눈에 파악하기
어려하셨어요. 이러한 불편함을 해소하고자 간편하고 팀의 연차 일정이
한눈에 보이는 연차관리 시스템을 개발하게 되었습니다.
 
### ⚽ 주요기능
* 사원은 연차를 신청 및 취소 및 신청 내역을 확인 할 수 있습니다.
* 사원은 달력을 통해 부서의 팀원의 연차 일정을 확인 할 수 있습니다.
* 팀장은 사원관리 및 부서를 관리 할 수 있습니다.
* 팀장은 팀원의 연차 수락/반려 를 하여 일정관리를 할 수 있습니다. 

### 👩‍💻 수행업무
- 연차 신청, 연차 내역 조회, 연차 수락/반려 API 및 화면 개발 담당
- QueryDSL을 도입하여 설정과 팀원들에게 사용 방법을 공유.
- Enum 타입과 convert를 통해 데이터 일관성 확보
- JUnit5를 활용하여 Service 테스트 진행

### 🥅 MEANING
한 주제로 다른기술을 가지고 2번에 걸쳐 프로젝트를 진행했었기 때문에, 각 기술의 장단점을 비교하고,
프로젝트를 DEVELOP 하는 과정이 재미있었습니다.
 
1차에서 MyBatis, thymeleaf 을 사용했으며, 2차 프로젝트 에서는 JPA, Vue를 사용했습니다.
MyBatis는 자유로은 쿼리 작성이 가능했지만 생산성 면에서는 JPA 가 더 빠르고 객체지향적이기 때문에  더 친숙하게 느껴졌습니다.
Thymeleaf는 동적인 화면을 구성이 어려웠지만, 프론트와 백을 한 프로젝트 안에서 개발 할 수 있다는 점이 좋았습니다.
 Vue의 Pinia를 사용한 전역 상태 관리를 통해 API로 통신한 데이터를 효율적으로 관리할 수 있었고, 동적인 UI 구성이 용이해 사용자에게 친화적인 인터페이스를 제공하는 데 유리했습니다.

1차 프로젝트를 마친 후, 팀원들과 프로젝트에 대한 회고를 하였고, 각자 아쉬웠던 점과 개선해야할점을 이야기 했습니다. 
이 과정을 통해서 부족한 기획을 보완하고, 매일 아침마다 회의를 하며 팀워크 뿐만 아니라 프로젝트 퀄리티도 높일 수 있었습니다.

### GITHUB 
🧷  https://github.com/TKO-RE-fresh/REfresh
`;

export const closetMarkdown = `
# The Closet
*2022.03 ~ 2022.05 ( FE 1명, BE 1명, 인공지능 1명 )*
* * *
### 🧐 BACKGROUND
주제 선정시, 일상생활에 쉽게 접할 수 있는 의식주 중에서 채택하고 싶었고,
저희 팀월들의 공통관심사인 '주' 로 결정하게 되었습니다.
옷을 고르는데 시간을 절약하고 싶은 사람, 쇼핑시 내 옷장을 보고 싶은 사람을 
타겟으로 언제 어디서든 볼 수 있는 나만의 AI 옷장 The Closet을 개발하게 되었습니다. 
 
### ⚽ 주요기능
* 사용자가 옷 이미지를 업로드 하면, AI 가 카테고리별로 정리해줍니다.
* 사용자는 AI를 통해 분류된 옷을 카테고리별로 볼 수 있습니다.


### 👩‍💻 수행업무
- DB 설계 및 백엔드 전반을 담당
- Thymeleaf를 통해 화면과 서버 연결
- Spring Security를 활용하여 로그인/로그아웃 구현
- JUnit5를 활용하여 Service 테스트 진행

### 🥅 MEANING
저의 첫 WEB 개발을 경험한 프로젝트에요. DB, Spring에 대한 지식이 부족하던 때라
프로젝트하는 동시에 학습도 같이 병행해야 했기 때문에 개발 속도도 더디고 매우 힘들었지만 
하나씩 해결해나가는 과정이 보람찼고, 한학기동안 빠르게 성장할 수 있었습니다.

특히, AI 와 웹사이트를 연결하는 작업에 많은 시간을 쏟았습니다. 당시 Rest API 에 대한 이해가 부족해
파이썬으로 된 머신러닝 모델과  Spring 서버와 통신하는 방법을 찾지 못했고, 
교수님의 조언에 따라 TensorFlow를 활용해서 AI 결과를 JavaScript 변환한 뒤 프론트에서 처리하는 방식으로
해결했습니다. 많은 자료들을 찾아보고, 다양한 기술을 시도해 보면서 기술적인 어려움을 극복할 수 있었지만, 
REST API 활용했다면 좀 더 빠르고 효율적으로 해결 할 수 있었을 것 같아 아쉬움이 남습니다. 

이 프로젝트를 통해 저의 부족함을 느끼는 동시에, 하나씩 해결해 나갈때 마다 보람을 느꼈고 
웹 개발자가 되기로 결심하는 계기가 되었어요. 무엇보다도 DB에서 서버로 서버에서 화면으로 
데이터의 흐름을 통해 하나의 서비스가 완성되는 과정에서 웹 개발에 매력을 느끼고 웹개발에 흥미가 생겼던 것 같습니다.

### GITHUB & THESIS 
🧷  [**Git Hub**](https://github.com/juhee99/CapstoneDesign_TheCloset)

📑  [**딥러닝 기반의 의류 이미지 분류 연구**](https://manuscriptlink-society-file.s3-ap-northeast-1.amazonaws.com/kips/conference/ack2022/presentation/KIPS_C2022B0216.pdf)

`;
